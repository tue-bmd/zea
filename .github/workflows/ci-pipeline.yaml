name: CI Pipeline

on:
  pull_request:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.base
          push: true
          tags: usbmd/base:latest
          cache-from: type=registry,ref=usbmd/base:cache
          cache-to: type=registry,ref=usbmd/base:cache,mode=max

  pylint:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Kill the job if it takes longer than 30 minutes.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker base image
        run: docker pull usbmd/base:latest

      - name: Run Pylint in container
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/ultrasound-toolbox" \
            -w /ultrasound-toolbox \
            usbmd/base:latest \
            sh -c "git config --global --add safe.directory /ultrasound-toolbox && pip install -e . && poetry run pylint \$(git ls-files '*.py') -j 0"

  tests:
    needs: build-and-push
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Kill the job if it takes longer than 30 minutes.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker base image
        run: docker pull usbmd/base:latest

      - name: Run Pytest in container
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/ultrasound-toolbox" \
            -w /ultrasound-toolbox \
            usbmd/base:latest \
            sh -c "git config --global --add safe.directory /ultrasound-toolbox && pip install -e . && pytest ./tests"
